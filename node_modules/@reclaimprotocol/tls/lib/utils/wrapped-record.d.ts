import { Key } from '../types';
import { CONTENT_TYPE_MAP, SUPPORTED_CIPHER_SUITE_MAP } from './constants';
type WrappedRecordCipherOptions = {
    authTag?: Uint8Array;
    iv: Uint8Array;
    key: Key;
    recordHeader: Uint8Array;
    recordNumber: number | undefined;
    cipherSuite: keyof typeof SUPPORTED_CIPHER_SUITE_MAP;
};
export declare function decryptWrappedRecord(encryptedData: Uint8Array, { authTag, key, iv, recordHeader, recordNumber, cipherSuite, }: WrappedRecordCipherOptions): Promise<{
    plaintext: Uint8Array;
    contentType: number;
}>;
export declare function encryptWrappedRecord({ plaintext, contentType }: {
    plaintext: Uint8Array;
    contentType: keyof typeof CONTENT_TYPE_MAP;
}, { key, iv, recordHeader, recordNumber, cipherSuite, }: WrappedRecordCipherOptions): Promise<{
    ciphertext: Uint8Array;
    authTag: Uint8Array;
}>;
export declare function parseWrappedRecord(data: Uint8Array): {
    encryptedData: Uint8Array;
    authTag: Uint8Array;
};
export {};
