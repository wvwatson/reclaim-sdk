"use strict";
/**
 * Verify the username on soundcloud
 */
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../config");
const http_parser_1 = require("../../utils/http-parser");
const HOST = 'soundcloud.com';
const HOSTPORT = `${HOST}:${config_1.DEFAULT_PORT}`;
const SoundcloudUsername = {
    hostPort: HOSTPORT,
    areValidParams(params) {
        return (typeof params.username === 'string' &&
            params.username !== '');
    },
    createRequest(secretParams) {
        const data = [
            'GET /discover HTTP/1.1',
            'Host: ' + HOST,
            'Connection: close',
            'authority: soundcloud.com',
            'accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
            'cookie: ' + secretParams.cookie,
            '\r\n',
        ].join('\r\n');
        const cookieStartIndex = data.indexOf(secretParams.cookie);
        return {
            data,
            redactions: [
                {
                    fromIndex: cookieStartIndex,
                    toIndex: cookieStartIndex + secretParams.cookie.length,
                },
            ],
        };
    },
    assertValidProviderReceipt(receipt, params) {
        if (receipt.hostPort !== HOSTPORT) {
            throw new Error(`Invalid hostPort: ${receipt.hostPort}`);
        }
        const req = (0, http_parser_1.getHttpRequestHeadersFromTranscript)(receipt.transcript);
        if (req.method !== 'get') {
            throw new Error(`Invalid method: ${req.method}`);
        }
        if (!req.url.startsWith('/discover')) {
            throw new Error(`Invalid URL: ${req.url}`);
        }
        if (req.headers['connection'] !== 'close') {
            throw new Error('Invalid connection header');
        }
        // Parse the HTTP response
        const res = (0, http_parser_1.getCompleteHttpResponseFromTranscript)(receipt.transcript);
        if (res.statusCode !== 200) {
            throw new Error(`Invalid status code: ${res.statusCode}`);
        }
        const bodyStr = res.body.toString();
        const usernameRegex = /"username":"([^"]+)"/g;
        const username = bodyStr.match(usernameRegex);
        const resUsername = username !== null ? username[0].split('"')[3] : '';
        if (resUsername !== params.username) {
            throw new Error('Username different from the user specified value');
        }
    },
};
exports.default = SoundcloudUsername;
