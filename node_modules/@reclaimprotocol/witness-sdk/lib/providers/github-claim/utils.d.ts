export declare const CLAIM_TYPE: readonly ["github-issues", "github-commits", "github-pull-requests"];
export type GithubClaimType = (typeof CLAIM_TYPE)[number];
type GithubError = {
    message: string;
    documentation_url?: string;
    errors?: {
        message?: string;
        resource?: string;
        field?: string;
        code?: string;
    }[];
};
type GithubSearchResponse = {
    total_count: number;
    incomplete_results: boolean;
    items: unknown[];
};
export declare const isGithubError: (error: unknown) => error is GithubError;
export declare const isValidResponse: (responseBody: unknown) => responseBody is GithubSearchResponse;
export type SearchQueryObject = {
    keywords: string[];
    qualifiers: Record<string, string[]>;
};
export declare const DEFAULT_QUERY_STRING: Record<string, string | number>;
export declare const buildQueryString: (searchQueryObj: SearchQueryObject, claimType: GithubClaimType, defaultQueries: Record<string, number | string>, repository: string) => string;
export declare function getGithubEndpoint(type: GithubClaimType): "commits" | "issues";
export declare function isObject(value: unknown): value is {
    [key: string]: any;
};
export {};
