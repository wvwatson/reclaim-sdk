/// <reference types="node" />
import { ArraySlice } from '../../types';
export type JSONIndex = {
    start: number;
    end: number;
};
export declare function extractHTMLElement(html: string, xpathExpression: string, contentsOnly: boolean): string;
export declare function extractJSONValueIndex(json: string, jsonPath: string): {
    start: number;
    end: number;
};
export declare function buildHeaders(input: Record<string, string>): string[];
/**
 * Converts position in HTTP response body to an absolute position in TLS transcript considering chunked encoding
 * @param pos
 * @param bodyStartIdx
 * @param chunks
 */
export declare function convertResponsePosToAbsolutePos(pos: number, bodyStartIdx: number, chunks?: ArraySlice[]): number;
export declare function parseHttpResponse(buff: Uint8Array): {
    statusCode: number;
    statusMessage: string;
    headers: import("http").IncomingHttpHeaders;
    body: Uint8Array;
    headersComplete: boolean;
    complete: boolean;
    statusLineEndIndex?: number | undefined;
    bodyStartIndex?: number | undefined;
    chunks?: ArraySlice[] | undefined;
};
