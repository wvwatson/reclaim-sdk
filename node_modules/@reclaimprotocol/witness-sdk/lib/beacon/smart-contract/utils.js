"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getContract = void 0;
const ethers_1 = require("ethers");
const nice_grpc_common_1 = require("nice-grpc-common");
const config_json_1 = __importDefault(require("./config.json"));
const types_1 = require("./types");
const existingContractsMap = {};
function getContract(chainId) {
    const chainKey = `0x${chainId.toString(16)}`;
    if (!existingContractsMap[chainKey]) {
        const contractData = config_json_1.default[chainKey];
        if (!contractData) {
            throw new nice_grpc_common_1.ServerError(nice_grpc_common_1.Status.INVALID_ARGUMENT, `Unsupported chain: "${chainKey}"`);
        }
        const rpcProvider = new ethers_1.ethers.providers.JsonRpcProvider(contractData.rpcUrl);
        existingContractsMap[chainKey] = types_1.Reclaim__factory.connect(contractData.address, rpcProvider);
    }
    return existingContractsMap[chainKey];
}
exports.getContract = getContract;
