import { ReclaimWitnessClient, TranscriptMessage } from '../proto/api';
import { Logger } from '../types';
export declare function uint8ArrayToStr(arr: Uint8Array): string;
export declare function getTranscriptString(transcript: TranscriptMessage[]): string;
export declare const unixTimestampSeconds: () => number;
export declare function createGrpcWebClient(url: string, logger: Logger): ReclaimWitnessClient;
export declare function makeGrpcWebTransport(logger?: Logger): import("@improbable-eng/grpc-web").grpc.TransportFactory;
/**
 * Find index of needle in haystack
 */
export declare function findIndexInUint8Array(haystack: Uint8Array, needle: Uint8Array): number;
/**
 * convert a Uint8Array to a binary encoded str
 * from: https://github.com/feross/buffer/blob/795bbb5bda1b39f1370ebd784bea6107b087e3a7/index.js#L1063
 * @param buf
 * @returns
 */
export declare function uint8ArrayToBinaryStr(buf: Uint8Array): string;
export declare function gunzipSync(buf: Uint8Array): Uint8Array;
