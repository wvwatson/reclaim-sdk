import { createClaim, CreateClaimOptions } from '../api-client';
import { ProviderName } from '../providers';
import { CreateStep } from '../types';
type IdentifiedMessage = {
    module: 'witness-sdk';
    /**
     * Optionally, name of the channel to respond to
     * Useful for specifying 'flutter_webview'
     * channel
     */
    channel?: string;
    id: string;
};
export type WindowRPCRequest<N extends ProviderName = any> = ({
    type: 'createClaim';
    request: CreateClaimOptions<N>;
}) & IdentifiedMessage;
type WindowRPCData = {
    type: 'createClaimDone';
    response: Awaited<ReturnType<typeof createClaim>>;
} | {
    type: 'createClaimStep';
    step: CreateStep;
} | {
    type: 'error';
    data: {
        message: string;
        stack?: string;
    };
};
export type WindowRPCResponse = WindowRPCData & IdentifiedMessage & {
    isResponse: true;
};
/**
 * Sets up the current window to listen for RPC requests
 * from React Native or other windows
 */
export declare function setupWindowRpc(): void;
export {};
